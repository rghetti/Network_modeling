library(sna)
library(network)
setwd("C:/Users/Riccardo Ghetti/Downloads/Network modeling/assignment1/assignment1/Krackhardt-High-Tech_Multiplex_Social/Dataset")
list.files()
attributes=read.table("Krackhardt-High-Tech_nodes.txt",header=TRUE)
nodes=as.matrix(read.table("Krackhardt-High-Tech_multiplex.edges",header=FALSE))
colnames(nodes)=c("layerID","IDi","IDj","weight")
library(sna)
library(network)
setwd("C:/Users/Riccardo Ghetti/Downloads/Network modeling/assignment1/assignment1/Krackhardt-High-Tech_Multiplex_Social/Dataset")
setwd("./Dataset")
list.files()
attributes=read.table("Krackhardt-High-Tech_nodes.txt",header=TRUE)
nodes=as.matrix(read.table("Krackhardt-High-Tech_multiplex.edges",header=FALSE))
colnames(nodes)=c("layerID","IDi","IDj","weight")
set.seed(0)
permutations=10000
friendship=nodes[191:292,2:4]
f.matrix=matrix(0,nrow=21,ncol=21)
colnames(f.matrix)=1:ncol(f.matrix)
for( k in 1:102){
f.matrix[friendship[k,1],friendship[k,2]]=1
}
advice=nodes[1:190,2:4]
ad.matrix=matrix(0,nrow=21,ncol=21)
colnames(ad.matrix)=1:ncol(ad.matrix)
for (k in 1:190){
ad.matrix[advice[k,1],advice[k,2]]=1
}
g1=netlogit(ad.matrix,f.matrix, rep=permutations,nullhyp='qapy')
g1$names=c('intercept','friendship')
summary(g1)
View(nodes)
View(ad.matrix)
View(nodes)
same_department=maxtrix(0, nrow=21, ncol=21)
same_department.matrix=maxtrix(0, nrow=21, ncol=21)
same_department.matrix=matrix(0, nrow=21, ncol=21)
View(attributes)
View(attributes)
View(attributes)
for (i in 1:21){
for (j in 1:21){
if(attributes[i] == atributes[j])
f.matrix[i][j] = 1
}
}
same_department.matrix=matrix(0, nrow=21, ncol=21)
for (i in 1:21){
for (j in 1:21){
if(attributes[i] == attributes[j])
f.matrix[i][j] = 1
}
}
f.matrix[i, j] = 1
for (j in 1:21){
if(attributes[i] == attributes[j])
f.matrix[i, j] = 1
}
View(attributes)
for (i in 1:21){
for (j in 1:21){
if(attributes[["nodeDepartment"]][i] == attributes[["nodeDepartment"]][j])
f.matrix[i, j] = 1
}
}
View(same_department.matrix)
attributes[["nodeDepartment"]]
attributes[["nodeDepartment"]][10]
attributes[["nodeDepartment"]][1]
attributes[["nodeDepartment"]][0]
attributes[["nodeDepartment"]][1]
attributes[["nodeDepartment"]][2]
attributes[["nodeDepartment"]][3]
library(sna)
library(network)
setwd("./Dataset")
list.files()
attributes=read.table("Krackhardt-High-Tech_nodes.txt",header=TRUE)
nodes=as.matrix(read.table("Krackhardt-High-Tech_multiplex.edges",header=FALSE))
colnames(nodes)=c("layerID","IDi","IDj","weight")
set.seed(0)
permutations=10000
friendship=nodes[191:292,2:4]
f.matrix=matrix(0,nrow=21,ncol=21)
colnames(f.matrix)=1:ncol(f.matrix)
for( k in 1:102){
f.matrix[friendship[k,1],friendship[k,2]]=1
}
advice=nodes[1:190,2:4]
ad.matrix=matrix(0,nrow=21,ncol=21)
colnames(ad.matrix)=1:ncol(ad.matrix)
for (k in 1:190){
ad.matrix[advice[k,1],advice[k,2]]=1
}
g1=netlogit(ad.matrix,f.matrix, rep=permutations,nullhyp='qapy')
g1$names=c('intercept','friendship')
summary(g1)
same_department.matrix=matrix(0, nrow=21, ncol=21)
for (i in 1:21){
for (j in 1:21){
if(attributes[["nodeDepartment"]][i] == attributes[["nodeDepartment"]][j])
same_department.matrix[i, j] = 1
}
}
View(same_department.matrix)
adjacency_corrected_by_tenure.matrix(0, nrow=num_people, ncol=num_people)
adjacency_corrected_by_tenure.matrix = matrix(0, nrow=num_people, ncol=num_people)
num_people = 21
same_department.matrix=matrix(0, nrow=num_people, ncol=num_people)
for (i in 1:num_people){
for (j in 1:num_people){
if(attributes[["nodeDepartment"]][i] == attributes[["nodeDepartment"]][j])
same_department.matrix[i, j] = 1
}
}
adjacency_corrected_by_tenure.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
adjacency_corrected_by_tenure.matrix[i, j] = ad.matrix[i, j] * exp(-attributes[["nodeTenure"]][i])
}
}
View(adjacency_corrected_by_tenure.matrix)
adjacency_corrected_by_tenure.matrix[i, j] = ad.matrix[i, j] * exp(-attributes[["nodeTenure"]][i] / 12)
for(i in 1:num_people){
for(j in 1:num_people){
adjacency_corrected_by_tenure.matrix[i, j] = ad.matrix[i, j] * exp(-attributes[["nodeTenure"]][i] / 12)
}
}
View(adjacency_corrected_by_tenure.matrix)
View(adjacency_corrected_by_tenure.matrix)
adjacency_corrected_by_age_dif.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
adjacency_corrected_by_age_dif.matrix[i, j] = ad.matrix[i, j] * exp(-abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j]))
}
}
View(adjacency_corrected_by_age_dif.matrix)
View(adjacency_corrected_by_age_dif.matrix)
adjacency_corrected_by_age_dif.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
adjacency_corrected_by_age_dif.matrix[i, j] = ad.matrix[i, j] * exp(-abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j]) / 10)
}
}
num_people = 21
same_department.matrix=matrix(0, nrow=num_people, ncol=num_people)
for (i in 1:num_people){
for (j in 1:num_people){
if(attributes[["nodeDepartment"]][i] == attributes[["nodeDepartment"]][j])
same_department.matrix[i, j] = 1
}
}
adjacency_corrected_by_tenure.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
adjacency_corrected_by_tenure.matrix[i, j] = 1 / attributes[["nodeTenure"]][i]
}
}
adjacency_corrected_by_age_dif.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
adjacency_corrected_by_age_dif.matrix[i, j] = 1 / abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j])
}
}
g2=netlogit(ad.matrix,f.matrix,same_department.matrix, adjacency_corrected_by_tenure.matrix, adjacency_corrected_by_age_dif.matrix, rep=permutations,nullhyp='qapy')
g1.5=netlogit(f.matrix,ad.matrix, rep=permutations,nullhyp='qapy')
g1.5$names=c('friendship', 'intercept')
summary(g1.5)
summary(g1)
num_people = 21
same_department.matrix=matrix(0, nrow=num_people, ncol=num_people)
for (i in 1:num_people){
for (j in 1:num_people){
if(attributes[["nodeDepartment"]][i] == attributes[["nodeDepartment"]][j])
same_department.matrix[i, j] = 1
}
}
inv_tenure.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_tenure.matrix[i, j] = 1 / attributes[["nodeTenure"]][i]
}
}
inv_age_dif_matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_age_dif_matrix[i, j] = 1 / abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j])
}
}
z <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
g2=netlogit(f.matrix,z, rep=permutations,nullhyp='qapy')
g2$names=c('friendship', 'intercept', 'inv_tenure', 'inv_age_dif')
summary(g2)
z <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
g2=netlogit(f.matrix,z, rep=permutations,nullhyp='qapy')
g2$names<-c('friendship', 'intercept', 'inv_tenure', 'inv_age_dif')
g2<-netlogit(f.matrix,z, rep=permutations,nullhyp='qapy')
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
View(zm)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
zm <- list(ad.matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('friendship', 'intercept', 'inv_tenure', 'inv_age_dif')
summary(g2)
g2$names<-c('friendship', 'intercept') #, 'inv_tenure', 'inv_age_dif')
summary(g2)
zm <- list(ad.matrix, same_department.matrix) #, inv_tenure.matrix, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('friendship', 'intercept', 'same_department')#, 'inv_tenure', 'inv_age_dif')
summary(g2)
g1.5=netlogit(f.matrix,ad.matrix, rep=permutations,nullhyp='qapy')
g1.5$names=c('intercept', 'advice')
summary(g1.5)
summary(g2)
g2$names<-c('intercept', 'friendship', 'same_department')#, 'inv_tenure', 'inv_age_dif')
summary(g2)
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix)#, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('intercept', 'friendship', 'same_department', 'inv_tenure') #, 'inv_age_dif')
inv_tenure.matrix[i, j] = attributes[["nodeTenure"]][i]
for(j in 1:num_people){
inv_tenure.matrix[i, j] = attributes[["nodeTenure"]][i]
}
for(i in 1:num_people){
for(j in 1:num_people){
inv_tenure.matrix[i, j] = attributes[["nodeTenure"]][i]
}
}
inv_age_dif_matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_age_dif_matrix[i, j] = 1 / abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j])
}
}
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix)#, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('intercept', 'friendship', 'same_department', 'inv_tenure') #, 'inv_age_dif')
summary(g2)
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('intercept', 'friendship', 'same_department', 'inv_tenure', 'inv_age_dif')
summary(g2)
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
inv_age_dif_matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_age_dif_matrix[i, j] = exp(-abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j]))
}
}
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('intercept', 'friendship', 'same_department', 'inv_tenure', 'inv_age_dif')
summary(g2)
inv_tenure.matrix[i, j] = exp^{-attributes[["nodeTenure"]][i]}
for(j in 1:num_people){
inv_tenure.matrix[i, j] = exp^{-attributes[["nodeTenure"]][i]}
}
for(i in 1:num_people){
for(j in 1:num_people){
inv_tenure.matrix[i, j] = exp^{-attributes[["nodeTenure"]][i]}
}
}
inv_age_dif_matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_age_dif_matrix[i, j] = exp(-abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j]))
}
}
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('intercept', 'friendship', 'same_department', 'inv_tenure', 'inv_age_dif')
summary(g2)
inv_tenure.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_tenure.matrix[i, j] = exp^{-attributes[["nodeTenure"]][i]}
}
}
inv_tenure.matrix[i, j] = exp(-attributes[["nodeTenure"]][i])
for(j in 1:num_people){
inv_tenure.matrix[i, j] = exp(-attributes[["nodeTenure"]][i])
}
inv_tenure.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_tenure.matrix[i, j] = exp(-attributes[["nodeTenure"]][i])
}
}
inv_age_dif_matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_age_dif_matrix[i, j] = exp(-abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j]))
}
}
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('intercept', 'friendship', 'same_department', 'inv_tenure', 'inv_age_dif')
summary(g2)
inv_tenure.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_tenure.matrix[i, j] = exp(attributes[["nodeTenure"]][i])
}
}
inv_age_dif_matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_age_dif_matrix[i, j] = exp(-abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j]))
}
}
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('intercept', 'friendship', 'same_department', 'inv_tenure', 'inv_age_dif')
summary(g2)
inv_tenure.matrix[i, j] = attributes[["nodeTenure"]][i]
inv_tenure.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_tenure.matrix[i, j] = attributes[["nodeTenure"]][i]
}
}
inv_age_dif_matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_age_dif_matrix[i, j] = exp(-abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j]))
}
}
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('intercept', 'friendship', 'same_department', 'inv_tenure', 'inv_age_dif')
summary(g2)
inv_age_dif_matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
inv_age_dif_matrix[i, j] = abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j])
}
}
zm <- list(ad.matrix, same_department.matrix, inv_tenure.matrix, inv_age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('intercept', 'friendship', 'same_department', 'inv_tenure', 'inv_age_dif')
summary(g2)
num_people = 21
same_department.matrix=matrix(0, nrow=num_people, ncol=num_people)
for (i in 1:num_people){
for (j in 1:num_people){
if(attributes[["nodeDepartment"]][i] == attributes[["nodeDepartment"]][j])
same_department.matrix[i, j] = 1
}
}
tenure.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
tenure.matrix[i, j] = attributes[["nodeTenure"]][i]
}
}
age_dif_matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
age_dif_matrix[i, j] = abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j])
}
}
zm <- list(ad.matrix, same_department.matrix, tenure.matrix, age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapy')
g2$names<-c('intercept', 'friendship', 'same_department', 'tenure', 'age_dif')
summary(g2)
#at the significance level of 0.05 we can see there is statistical
#at the significance level of 0.05 we can see there is statistical
#evidence that friendship is a good predictor of advice seeking
zm <- list(ad.matrix, same_department.matrix, tenure.matrix, age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapspp')
g2$names<-c('intercept', 'advice', 'same_department', 'tenure', 'age_dif')
summary(g2)
summary(g2)
#at the significance level of 0.05 we can see there is statistical
#at the significance level of 0.05 we can see there is statistical
#evidence that people more likely nominate their friends peoples from the same
#at the significance level of 0.05 we can see there is statistical
#evidence that people more likely nominate their friends peoples from the same
#department or people, who they are asking an advice.
#at the significance level of 0.05 we can see there is statistical
#evidence that people more likely nominate their friends peoples from the same
#department or people, who they are asking an advice.
#From the other hand, at the significance level of 0.05, tenure and
library(sna)
library(network)
setwd("./Dataset")
list.files()
attributes=read.table("Krackhardt-High-Tech_nodes.txt",header=TRUE)
nodes=as.matrix(read.table("Krackhardt-High-Tech_multiplex.edges",header=FALSE))
colnames(nodes)=c("layerID","IDi","IDj","weight")
set.seed(0)
permutations=10000
friendship=nodes[191:292,2:4]
f.matrix=matrix(0,nrow=21,ncol=21)
colnames(f.matrix)=1:ncol(f.matrix)
for( k in 1:102){
f.matrix[friendship[k,1],friendship[k,2]]=1
}
advice=nodes[1:190,2:4]
ad.matrix=matrix(0,nrow=21,ncol=21)
colnames(ad.matrix)=1:ncol(ad.matrix)
for (k in 1:190){
ad.matrix[advice[k,1],advice[k,2]]=1
}
g1=netlogit(ad.matrix,f.matrix, rep=permutations,nullhyp='qapy')
g1$names=c('intercept','friendship')
summary(g1)
g1.5=netlogit(f.matrix,ad.matrix, rep=permutations,nullhyp='qapy')
g1.5$names=c('intercept', 'advice')
summary(g1.5)
num_people = 21
same_department.matrix=matrix(0, nrow=num_people, ncol=num_people)
for (i in 1:num_people){
for (j in 1:num_people){
if(attributes[["nodeDepartment"]][i] == attributes[["nodeDepartment"]][j])
same_department.matrix[i, j] = 1
}
}
tenure.matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
tenure.matrix[i, j] = attributes[["nodeTenure"]][i]
}
}
age_dif_matrix = matrix(0, nrow=num_people, ncol=num_people)
for(i in 1:num_people){
for(j in 1:num_people){
age_dif_matrix[i, j] = abs(attributes[["nodeAge"]][i]-attributes[["nodeAge"]][j])
}
}
zm <- list(ad.matrix, same_department.matrix, tenure.matrix, age_dif_matrix)
g2<-netlogit(f.matrix,zm, rep=permutations,nullhyp='qapspp')
g2$names<-c('intercept', 'advice', 'same_department', 'tenure', 'age_dif')
summary(g2)
#at the significance level of 0.05 we can see there is statistical
#at the significance level of 0.05 we can see there is statistical
#evidence that people more likely nominate their friends peoples from the same
#at the significance level of 0.05 we can see there is statistical
#evidence that people more likely nominate their friends peoples from the same
#department or people, who they are asking an advice.
#at the significance level of 0.05 we can see there is statistical
#evidence that people more likely nominate their friends peoples from the same
#department or people, who they are asking an advice.
#From the other hand, at the significance level of 0.05, tenure and
